{"version":3,"file":"sora.min.js","sources":["../packages/e2ee/dist/sora_e2ee.mjs","../packages/go-wasm/src/wasm_exec.js","../node_modules/fflate/esm/browser.js"],"sourcesContent":["/**\n * @sora/e2ee\n * WebRTC SFU Sora JavaScript E2EE Library\n * @version: 2021.1.0\n * @author: Shiguredo Inc.\n * @license: Apache-2.0\n **/\n\nimport WasmExec from '@sora/go-wasm';\n\nconst WORKER_SCRIPT = \"\";\nclass SoraE2EE {\n    constructor() {\n        // 対応しているかどうかの判断\n        // @ts-ignore トライアル段階の API なので無視する\n        const supportsInsertableStreams = !!RTCRtpSender.prototype.createEncodedStreams;\n        if (!supportsInsertableStreams) {\n            throw new Error(\"E2EE is not supported in this browser.\");\n        }\n        this.worker = null;\n        this.onWorkerDisconnect = null;\n    }\n    // worker を起動する\n    startWorker() {\n        // ワーカーを起動する\n        const workerScript = atob(WORKER_SCRIPT);\n        this.worker = new Worker(URL.createObjectURL(new Blob([workerScript], { type: \"application/javascript\" })));\n        this.worker.onmessage = (event) => {\n            const { operation } = event.data;\n            if (operation === \"disconnect\" && typeof this.onWorkerDisconnect === \"function\") {\n                this.onWorkerDisconnect();\n            }\n        };\n    }\n    // worker の掃除をする\n    clearWorker() {\n        if (this.worker) {\n            this.worker.postMessage({\n                type: \"clear\",\n            });\n        }\n    }\n    // worker を終了する\n    terminateWorker() {\n        if (this.worker) {\n            this.worker.terminate();\n        }\n    }\n    // 初期化処理\n    async init() {\n        const { preKeyBundle } = await window.e2ee.init();\n        return preKeyBundle;\n    }\n    setupSenderTransform(sender) {\n        if (!sender.track) {\n            return;\n        }\n        // @ts-ignore トライアル段階の API なので無視する\n        const senderStreams = sender.createEncodedStreams();\n        const readableStream = senderStreams.readableStream || senderStreams.readable;\n        const writableStream = senderStreams.writableStream || senderStreams.writable;\n        if (!this.worker) {\n            throw new Error(\"Worker is null. Call startWorker in advance.\");\n        }\n        const message = {\n            type: \"encrypt\",\n            readableStream: readableStream,\n            writableStream: writableStream,\n        };\n        this.worker.postMessage(message, [readableStream, writableStream]);\n    }\n    setupReceiverTransform(receiver) {\n        // @ts-ignore トライアル段階の API なので無視する\n        const receiverStreams = receiver.createEncodedStreams();\n        const readableStream = receiverStreams.readableStream || receiverStreams.readable;\n        const writableStream = receiverStreams.writableStream || receiverStreams.writable;\n        if (!this.worker) {\n            throw new Error(\"Worker is null. Call startWorker in advance.\");\n        }\n        const message = {\n            type: \"decrypt\",\n            readableStream: readableStream,\n            writableStream: writableStream,\n        };\n        this.worker.postMessage(message, [readableStream, writableStream]);\n    }\n    postRemoteSecretKeyMaterials(result) {\n        if (!this.worker) {\n            throw new Error(\"Worker is null. Call startWorker in advance.\");\n        }\n        this.worker.postMessage({\n            type: \"remoteSecretKeyMaterials\",\n            remoteSecretKeyMaterials: result.remoteSecretKeyMaterials,\n        });\n    }\n    postRemoveRemoteDeriveKey(connectionId) {\n        if (!this.worker) {\n            throw new Error(\"Worker is null. Call startWorker in advance.\");\n        }\n        this.worker.postMessage({\n            type: \"removeRemoteDeriveKey\",\n            connectionId: connectionId,\n        });\n    }\n    postSelfSecretKeyMaterial(selfConnectionId, selfKeyId, selfSecretKeyMaterial, waitingTime = 0) {\n        if (!this.worker) {\n            throw new Error(\"Worker is null. Call startWorker in advance.\");\n        }\n        this.worker.postMessage({\n            type: \"selfSecretKeyMaterial\",\n            selfConnectionId: selfConnectionId,\n            selfKeyId: selfKeyId,\n            selfSecretKeyMaterial: selfSecretKeyMaterial,\n            waitingTime: waitingTime,\n        });\n    }\n    startSession(connectionId, preKeyBundle) {\n        const [result, err] = window.e2ee.startSession(connectionId, preKeyBundle.identityKey, preKeyBundle.signedPreKey, preKeyBundle.preKeySignature);\n        if (err) {\n            throw err;\n        }\n        return result;\n    }\n    stopSession(connectionId) {\n        const [result, err] = window.e2ee.stopSession(connectionId);\n        if (err) {\n            throw err;\n        }\n        return result;\n    }\n    receiveMessage(message) {\n        const [result, err] = window.e2ee.receiveMessage(message);\n        if (err) {\n            throw err;\n        }\n        return result;\n    }\n    start(selfConnectionId) {\n        const [result, err] = window.e2ee.start(selfConnectionId);\n        if (err) {\n            throw err;\n        }\n        return result;\n    }\n    addPreKeyBundle(connectionId, preKeyBundle) {\n        const err = window.e2ee.addPreKeyBundle(connectionId, preKeyBundle.identityKey, preKeyBundle.signedPreKey, preKeyBundle.preKeySignature);\n        if (err) {\n            throw err;\n        }\n    }\n    selfFingerprint() {\n        return window.e2ee.selfFingerprint();\n    }\n    remoteFingerprints() {\n        return window.e2ee.remoteFingerprints();\n    }\n    static async loadWasm(wasmUrl) {\n        if (!window.e2ee === undefined) {\n            console.warn(\"E2ee wasm is already loaded. Will not be reload.\");\n            return;\n        }\n        WasmExec();\n        if (!window.Go) {\n            throw new Error(`Failed to load module Go. window.Go is ${window.Go}.`);\n        }\n        const go = new Go();\n        const { instance } = await WebAssembly.instantiateStreaming(fetch(wasmUrl), go.importObject);\n        go.run(instance);\n        if (!window.e2ee) {\n            throw new Error(`Failed to load module e2ee. window.e2ee is ${window.e2ee}.`);\n        }\n    }\n    static version() {\n        return \"2021.1.0\";\n    }\n    static wasmVersion() {\n        return window.e2ee.version();\n    }\n}\n\nexport { SoraE2EE as default };\n","// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nexport default function () {\n\t(() => {\n\t\t// Map multiple JavaScript environments to a single common API,\n\t\t// preferring web standards over Node.js API.\n\t\t//\n\t\t// Environments considered:\n\t\t// - Browsers\n\t\t// - Node.js\n\t\t// - Electron\n\t\t// - Parcel\n\t\n\t\tif (typeof global !== \"undefined\") {\n\t\t\t// global already exists\n\t\t} else if (typeof window !== \"undefined\") {\n\t\t\twindow.global = window;\n\t\t} else if (typeof self !== \"undefined\") {\n\t\t\tself.global = self;\n\t\t} else {\n\t\t\tthrow new Error(\"cannot export Go (neither global, window nor self is defined)\");\n\t\t}\n\t\n\t\tif (!global.require && typeof require !== \"undefined\") {\n\t\t\tglobal.require = require;\n\t\t}\n\t\n\t\tif (!global.fs && global.require) {\n\t\t\tconst fs = require(\"fs\");\n\t\t\tif (Object.keys(fs) !== 0) {\n\t\t\t\tglobal.fs = fs;\n\t\t\t}\n\t\t}\n\t\n\t\tconst enosys = () => {\n\t\t\tconst err = new Error(\"not implemented\");\n\t\t\terr.code = \"ENOSYS\";\n\t\t\treturn err;\n\t\t};\n\t\n\t\tif (!global.fs) {\n\t\t\tlet outputBuf = \"\";\n\t\t\tglobal.fs = {\n\t\t\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\t\t\twriteSync(fd, buf) {\n\t\t\t\t\toutputBuf += decoder.decode(buf);\n\t\t\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\t\t\tif (nl != -1) {\n\t\t\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t\t\t}\n\t\t\t\t\treturn buf.length;\n\t\t\t\t},\n\t\t\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\t\t\tcallback(enosys());\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\t\t\tcallback(null, n);\n\t\t\t\t},\n\t\t\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\t\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\t\tclose(fd, callback) { callback(enosys()); },\n\t\t\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\t\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\t\t\tfstat(fd, callback) { callback(enosys()); },\n\t\t\t\tfsync(fd, callback) { callback(null); },\n\t\t\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\t\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\t\tlink(path, link, callback) { callback(enosys()); },\n\t\t\t\tlstat(path, callback) { callback(enosys()); },\n\t\t\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\t\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\t\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\t\t\treaddir(path, callback) { callback(enosys()); },\n\t\t\t\treadlink(path, callback) { callback(enosys()); },\n\t\t\t\trename(from, to, callback) { callback(enosys()); },\n\t\t\t\trmdir(path, callback) { callback(enosys()); },\n\t\t\t\tstat(path, callback) { callback(enosys()); },\n\t\t\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\t\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\t\t\tunlink(path, callback) { callback(enosys()); },\n\t\t\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t\t\t};\n\t\t}\n\t\n\t\tif (!global.process) {\n\t\t\tglobal.process = {\n\t\t\t\tgetuid() { return -1; },\n\t\t\t\tgetgid() { return -1; },\n\t\t\t\tgeteuid() { return -1; },\n\t\t\t\tgetegid() { return -1; },\n\t\t\t\tgetgroups() { throw enosys(); },\n\t\t\t\tpid: -1,\n\t\t\t\tppid: -1,\n\t\t\t\tumask() { throw enosys(); },\n\t\t\t\tcwd() { throw enosys(); },\n\t\t\t\tchdir() { throw enosys(); },\n\t\t\t}\n\t\t}\n\t\n\t\tif (!global.crypto) {\n\t\t\tconst nodeCrypto = require(\"crypto\");\n\t\t\tglobal.crypto = {\n\t\t\t\tgetRandomValues(b) {\n\t\t\t\t\tnodeCrypto.randomFillSync(b);\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\n\t\tif (!global.performance) {\n\t\t\tglobal.performance = {\n\t\t\t\tnow() {\n\t\t\t\t\tconst [sec, nsec] = process.hrtime();\n\t\t\t\t\treturn sec * 1000 + nsec / 1000000;\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\n\t\tif (!global.TextEncoder) {\n\t\t\tglobal.TextEncoder = require(\"util\").TextEncoder;\n\t\t}\n\t\n\t\tif (!global.TextDecoder) {\n\t\t\tglobal.TextDecoder = require(\"util\").TextDecoder;\n\t\t}\n\t\n\t\t// End of polyfills for common API.\n\t\n\t\tconst encoder = new TextEncoder(\"utf-8\");\n\t\tconst decoder = new TextDecoder(\"utf-8\");\n\t\n\t\tglobal.Go = class {\n\t\t\tconstructor() {\n\t\t\t\tthis.argv = [\"js\"];\n\t\t\t\tthis.env = {};\n\t\t\t\tthis.exit = (code) => {\n\t\t\t\t\tif (code !== 0) {\n\t\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\t\t\tthis._resolveExitPromise = resolve;\n\t\t\t\t});\n\t\t\t\tthis._pendingEvent = null;\n\t\t\t\tthis._scheduledTimeouts = new Map();\n\t\t\t\tthis._nextCallbackTimeoutID = 1;\n\t\n\t\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t\t\tthis.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t\t}\n\t\n\t\t\t\tconst getInt64 = (addr) => {\n\t\t\t\t\tconst low = this.mem.getUint32(addr + 0, true);\n\t\t\t\t\tconst high = this.mem.getInt32(addr + 4, true);\n\t\t\t\t\treturn low + high * 4294967296;\n\t\t\t\t}\n\t\n\t\t\t\tconst loadValue = (addr) => {\n\t\t\t\t\tconst f = this.mem.getFloat64(addr, true);\n\t\t\t\t\tif (f === 0) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\t\treturn f;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tconst id = this.mem.getUint32(addr, true);\n\t\t\t\t\treturn this._values[id];\n\t\t\t\t}\n\t\n\t\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\t\tconst nanHead = 0x7FF80000;\n\t\n\t\t\t\t\tif (typeof v === \"number\" && v !== 0) {\n\t\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\t\tthis.mem.setUint32(addr, 0, true);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.mem.setFloat64(addr, v, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (v === undefined) {\n\t\t\t\t\t\tthis.mem.setFloat64(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t\t}\n\t\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\t\tlet typeFlag = 0;\n\t\t\t\t\tswitch (typeof v) {\n\t\t\t\t\t\tcase \"object\":\n\t\t\t\t\t\t\tif (v !== null) {\n\t\t\t\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\t\tthis.mem.setUint32(addr, id, true);\n\t\t\t\t}\n\t\n\t\t\t\tconst loadSlice = (addr) => {\n\t\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t\t\t}\n\t\n\t\t\t\tconst loadSliceOfValues = (addr) => {\n\t\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\t\tconst a = new Array(len);\n\t\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\n\t\t\t\tconst loadString = (addr) => {\n\t\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t\t\t}\n\t\n\t\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\t\tthis.importObject = {\n\t\t\t\t\tgo: {\n\t\t\t\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\t\n\t\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\t\t\t\tconst code = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\t\tdelete this._goRefCounts;\n\t\t\t\t\t\t\tdelete this._ids;\n\t\t\t\t\t\t\tdelete this._idPool;\n\t\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\t\tconst n = this.mem.getInt32(sp + 24, true);\n\t\t\t\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func resetMemoryDataView()\n\t\t\t\t\t\t\"runtime.resetMemoryDataView\": (sp) => {\n\t\t\t\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func nanotime1() int64\n\t\t\t\t\t\t\"runtime.nanotime1\": (sp) => {\n\t\t\t\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func walltime1() (sec int64, nsec int32)\n\t\t\t\t\t\t\"runtime.walltime1\": (sp) => {\n\t\t\t\t\t\t\tconst msec = (new Date).getTime();\n\t\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\t\tthis.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t\twhile (this._scheduledTimeouts.has(id)) {\n\t\t\t\t\t\t\t\t\t\t// for some reason Go failed to register the timeout event, log and try again\n\t\t\t\t\t\t\t\t\t\t// (temporary workaround for https://github.com/golang/go/issues/28975)\n\t\t\t\t\t\t\t\t\t\tconsole.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\t\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\tthis.mem.setInt32(sp + 16, id, true);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\t\t\t\tconst id = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t\t\tconst id = this.mem.getUint32(sp + 8, true);\n\t\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\t\t\t\tconst result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\t\"syscall/js.valueDelete\": (sp) => {\n\t\t\t\t\t\t\tReflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 1);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 24, (loadValue(sp + 8) instanceof loadValue(sp + 16)) ? 1 : 0);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\t\"syscall/js.copyBytesToGo\": (sp) => {\n\t\t\t\t\t\t\tconst dst = loadSlice(sp + 8);\n\t\t\t\t\t\t\tconst src = loadValue(sp + 32);\n\t\t\t\t\t\t\tif (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// func copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t\t\"syscall/js.copyBytesToJS\": (sp) => {\n\t\t\t\t\t\t\tconst dst = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst src = loadSlice(sp + 16);\n\t\t\t\t\t\t\tif (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t\"debug\": (value) => {\n\t\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tasync run(instance) {\n\t\t\t\tthis._inst = instance;\n\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\t\tNaN,\n\t\t\t\t\t0,\n\t\t\t\t\tnull,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tglobal,\n\t\t\t\t\tthis,\n\t\t\t\t];\n\t\t\t\tthis._goRefCounts = new Array(this._values.length).fill(Infinity); // number of references that Go has to a JS value, indexed by reference id\n\t\t\t\tthis._ids = new Map([ // mapping from JS values to reference ids\n\t\t\t\t\t[0, 1],\n\t\t\t\t\t[null, 2],\n\t\t\t\t\t[true, 3],\n\t\t\t\t\t[false, 4],\n\t\t\t\t\t[global, 5],\n\t\t\t\t\t[this, 6],\n\t\t\t\t]);\n\t\t\t\tthis._idPool = [];   // unused ids that have been garbage collected\n\t\t\t\tthis.exited = false; // whether the Go program has exited\n\t\n\t\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\t\tlet offset = 4096;\n\t\n\t\t\t\tconst strPtr = (str) => {\n\t\t\t\t\tconst ptr = offset;\n\t\t\t\t\tconst bytes = encoder.encode(str + \"\\0\");\n\t\t\t\t\tnew Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n\t\t\t\t\toffset += bytes.length;\n\t\t\t\t\tif (offset % 8 !== 0) {\n\t\t\t\t\t\toffset += 8 - (offset % 8);\n\t\t\t\t\t}\n\t\t\t\t\treturn ptr;\n\t\t\t\t};\n\t\n\t\t\t\tconst argc = this.argv.length;\n\t\n\t\t\t\tconst argvPtrs = [];\n\t\t\t\tthis.argv.forEach((arg) => {\n\t\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t\t});\n\t\t\t\targvPtrs.push(0);\n\t\n\t\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\t\tkeys.forEach((key) => {\n\t\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t\t});\n\t\t\t\targvPtrs.push(0);\n\t\n\t\t\t\tconst argv = offset;\n\t\t\t\targvPtrs.forEach((ptr) => {\n\t\t\t\t\tthis.mem.setUint32(offset, ptr, true);\n\t\t\t\t\tthis.mem.setUint32(offset + 4, 0, true);\n\t\t\t\t\toffset += 8;\n\t\t\t\t});\n\t\n\t\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\t\tif (this.exited) {\n\t\t\t\t\tthis._resolveExitPromise();\n\t\t\t\t}\n\t\t\t\tawait this._exitPromise;\n\t\t\t}\n\t\n\t\t\t_resume() {\n\t\t\t\tif (this.exited) {\n\t\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t\t}\n\t\t\t\tthis._inst.exports.resume();\n\t\t\t\tif (this.exited) {\n\t\t\t\t\tthis._resolveExitPromise();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_makeFuncWrapper(id) {\n\t\t\t\tconst go = this;\n\t\t\t\treturn function () {\n\t\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\t\tgo._pendingEvent = event;\n\t\t\t\t\tgo._resume();\n\t\t\t\t\treturn event.result;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\n\t\tif (\n\t\t\tglobal.require &&\n\t\t\tglobal.require.main === module &&\n\t\t\tglobal.process &&\n\t\t\tglobal.process.versions &&\n\t\t\t!global.process.versions.electron\n\t\t) {\n\t\t\tif (process.argv.length < 3) {\n\t\t\t\tconsole.error(\"usage: go_js_wasm_exec [wasm binary] [arguments]\");\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\n\t\t\tconst go = new Go();\n\t\t\tgo.argv = process.argv.slice(2);\n\t\t\tgo.env = Object.assign({ TMPDIR: require(\"os\").tmpdir() }, process.env);\n\t\t\tgo.exit = process.exit;\n\t\t\tWebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject).then((result) => {\n\t\t\t\tprocess.on(\"exit\", (code) => { // Node.js exits if no event handler is pending\n\t\t\t\t\tif (code === 0 && !go.exited) {\n\t\t\t\t\t\t// deadlock, make Go print error and stack traces\n\t\t\t\t\t\tgo._pendingEvent = { id: 0 };\n\t\t\t\t\t\tgo._resume();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn go.run(result.instance);\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t\tprocess.exit(1);\n\t\t\t});\n\t\t}\n\t})();\n}\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295;\n        if (z) {\n            e = b4(data, e - 12);\n            if (b4(data, e) != 0x6064B50) {\n                cbd(err(13, 0, 1), null);\n                return tAll;\n            }\n            c = lft = b4(data, e + 32);\n            o = b4(data, e + 48);\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            err(13);\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n"],"names":["SoraE2EE","constructor","RTCRtpSender","prototype","createEncodedStreams","Error","this","worker","onWorkerDisconnect","startWorker","workerScript","atob","Worker","URL","createObjectURL","Blob","type","onmessage","event","operation","data","clearWorker","postMessage","terminateWorker","terminate","async","preKeyBundle","window","e2ee","init","setupSenderTransform","sender","track","senderStreams","readableStream","readable","writableStream","writable","message","setupReceiverTransform","receiver","receiverStreams","postRemoteSecretKeyMaterials","result","remoteSecretKeyMaterials","postRemoveRemoteDeriveKey","connectionId","postSelfSecretKeyMaterial","selfConnectionId","selfKeyId","selfSecretKeyMaterial","waitingTime","startSession","err","identityKey","signedPreKey","preKeySignature","stopSession","receiveMessage","start","addPreKeyBundle","selfFingerprint","remoteFingerprints","static","wasmUrl","undefined","console","warn","global","self","require","fs","Object","keys","enosys","code","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","decoder","decode","nl","lastIndexOf","log","substr","length","write","offset","position","callback","chmod","path","mode","chown","uid","gid","close","fchmod","fchown","fstat","fsync","ftruncate","lchown","link","lstat","mkdir","perm","open","flags","read","buffer","readdir","readlink","rename","from","to","rmdir","stat","symlink","truncate","unlink","utimes","atime","mtime","process","getuid","getgid","geteuid","getegid","getgroups","pid","ppid","umask","cwd","chdir","crypto","nodeCrypto","getRandomValues","b","randomFillSync","performance","now","sec","nsec","hrtime","TextEncoder","TextDecoder","encoder","Go","argv","env","exit","_exitPromise","Promise","resolve","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","setInt64","addr","v","mem","setUint32","Math","floor","getInt64","getUint32","getInt32","loadValue","f","getFloat64","isNaN","id","_values","storeValue","nanHead","setFloat64","_ids","get","_idPool","pop","_goRefCounts","set","typeFlag","loadSlice","array","len","Uint8Array","_inst","exports","loadSliceOfValues","a","Array","i","loadString","saddr","DataView","timeOrigin","Date","importObject","go","sp","exited","p","n","msec","getTime","setInt32","setTimeout","_resume","has","clearTimeout","delete","push","Reflect","getsp","deleteProperty","m","args","apply","setUint8","construct","parseInt","str","encode","String","dst","src","Uint8ClampedArray","toCopy","subarray","debug","value","instance","NaN","fill","Infinity","strPtr","ptr","bytes","argc","argvPtrs","forEach","arg","sort","key","run","resume","_makeFuncWrapper","arguments","main","module","versions","electron","error","slice","assign","TMPDIR","tmpdir","WebAssembly","instantiate","readFileSync","then","on","catch","instantiateStreaming","fetch","version","u8","u16","Uint16Array","u32","Uint32Array","fleb","fdeb","clim","freb","eb","r","j","_a","fl","revfl","_b","revfd","rev","x","hMap","cd","mb","s","l","co","le","rvb","sv","r_1","flt","fdt","flm","flrm","fdm","fdrm","max","bits","d","o","bits16","shft","slc","e","BYTES_PER_ELEMENT","ec","ind","msg","nt","captureStackTrace","wbits","wbits16","hTree","t","t2","et","i0","i1","i2","maxSym","tr","mbt","ln","dt","lft","cst","i2_1","i2_2","i2_3","lc","c","cl","cli","cln","cls","w","clen","cf","wfblk","out","pos","dat","wblk","final","syms","lf","df","li","bs","bl","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","lm","ll","dm","dl","flen","ftlen","dtlen","llm","lcts","it","clct","deo","dopt","opt","pre","post","st","lvl","plvl","lst","ceil","msk_1","prev","head","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","min","maxd","ml","mmd","md","ti","lin","din","dflt","level","zlibSync","opts","adler","lv","zlh","wbytes","unzlibSync","sl","noBuf","noSt","cbuf","nbuf","bt","lbt","dbt","tbts","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","lms","dms","lpos","sym","add","dsym","end","inflt","td","stream"],"mappings":"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"}